{"version":3,"file":"static/js/815.cd1da361.chunk.js","mappings":"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","sources":["webpack://react-kama/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.module.css","webpack://react-kama/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"icon\":\"ProfileInfo_icon__z+Lt7\"};","import React from 'react';\n\nexport const ProfileStatusWithHooks = (props) => {\n  const [editMode, setEditMode] = React.useState(false);\n  const [status, setStatus] = React.useState(props.status);\n\n  const toggleEditMode = () => {\n    editMode ? setEditMode(false) : setEditMode(true);\n  };\n\n  const onStatusChange = (e) => {\n    const text = e.currentTarget.value;\n    setStatus(text);\n  };\n\n  React.useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onClick={toggleEditMode}>{props.status || '----'}</span>\n        </div>\n      )}\n\n      {editMode && (\n        <div>\n          <input\n            autoFocus={true}\n            onChange={(e) => onStatusChange(e)}\n            onBlur={() => {\n              toggleEditMode();\n              props.updateStatus(status);\n            }}\n            type='text'\n            value={status}\n          ></input>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport { Preloader } from '../../Preloader/Preloader';\r\nimport { ProfileStatusWithHooks } from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img className={s.icon} src='https://cdn-icons-png.flaticon.com/512/666/666201.png' alt='' />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} alt='' />\r\n        <p>{props.profile.fullName}</p>\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"like\":\"Post_like__+fQP+\"};","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn-icons-png.flaticon.com/128/3082/3082351.png' />\r\n      <span className={s.like}>\r\n        <span>{props.likesCount}</span>\r\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdnBlK_Dcb2xIPJe6KfZrqbuR2lFrBUF0mKg&usqp=CAU' alt='' />\r\n      </span>\r\n      <span className={s.text}>{props.message}</span>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLength30, requiredField } from '../../../utils/validators/validators';\r\nimport { TextArea } from '../../FormsControls/FormsControls';\r\n\r\nconst MyPostsForm = (props) => {\r\n  let newPostElement = React.createRef();\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          validate={[requiredField, maxLength30]}\r\n          name='newPostText'\r\n          component={TextArea}\r\n          ref={newPostElement}\r\n          value={props.newPostText}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field component={'button'}>Add post</Field>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxMyPostsForm = reduxForm({ form: 'myPosts' })(MyPostsForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n  const addPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <ReduxMyPostsForm onSubmit={addPost} />\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer';\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n  return ComponentWithRouterProp;\n}\n\nconst ProfileContainerAPI = (props) => {\n  useEffect(() => {\n    let userId = props.router.params.id;\n    if (!userId) {\n      userId = props.authorizedUserId;\n    }\n    props.getUserProfile(userId);\n    props.getStatus(userId);\n  }, []);\n\n  if (!props.isAuth) {\n    return <Navigate to='/login' />;\n  }\n  return <Profile {...props} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />;\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  isAuth: state.auth.isAuth,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n});\n\nexport const ProfileContainer = compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter,\n  WithAuthRedirect\n)(ProfileContainerAPI);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const WithAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to='/login' />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n\n  return ConnectedRedirectComponent;\n};\n"],"names":["ProfileStatusWithHooks","props","_React$useState","React","_React$useState2","_slicedToArray","editMode","setEditMode","_React$useState3","status","_React$useState4","setStatus","toggleEditMode","_jsxs","children","_jsx","onClick","autoFocus","onChange","e","text","currentTarget","value","onStatusChange","onBlur","updateStatus","type","profile","className","s","src","alt","photos","large","fullName","Preloader","likesCount","message","ReduxMyPostsForm","reduxForm","form","newPostElement","onSubmit","handleSubmit","Field","validate","requiredField","maxLength30","name","component","TextArea","ref","newPostText","postsElements","posts","map","p","Post","id","values","addPost","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","compose","isAuth","auth","authorizedUserId","userId","getUserProfile","getStatus","Component","location","useLocation","navigate","useNavigate","params","useParams","_objectSpread","router","WithAuthRedirect","useEffect","Profile","Navigate","to","mapStateToProps","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this"],"sourceRoot":""}