{"version":3,"file":"static/js/672.48bd088f.chunk.js","mappings":"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","sources":["webpack://react-kama/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\",\"addMessage\":\"Dialogs_addMessage__GG1Lt\",\"button\":\"Dialogs_button__8Qbmd\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <Link to={path}>{props.name}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../FormsControls/FormsControls';\r\nimport { maxLength30, requiredField } from '../../utils/validators/validators';\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={TextArea}\r\n        validate={[requiredField, maxLength30]}\r\n        name='newMessageBody'\r\n        placeholder='Enter your message'\r\n        className={s.addMessage}\r\n      ></Field>\r\n      <button className={s.button}>Send Message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxAddMessageForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n  let messagesElements = state.messages.map((m) => <Message message={m.message} id={m.id} key={m.id} />);\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>{messagesElements}</div>\r\n      <ReduxAddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { sendMessageCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n  };\n};\n\nconst DialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Dialogs);\n\nexport default DialogsContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const WithAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to='/login' />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n\n  return ConnectedRedirectComponent;\n};\n"],"names":["props","path","id","_jsx","className","s","children","Link","to","name","message","ReduxAddMessageForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","TextArea","validate","requiredField","maxLength30","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","values","sendMessage","newMessageBody","compose","connect","isAuth","auth","dispatch","sendMessageCreator","WithAuthRedirect","Dialogs","mapStateToProps","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React"],"sourceRoot":""}